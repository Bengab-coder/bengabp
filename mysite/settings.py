"""
Django settings for mysite project.
--\
Generated by 'django-admin startproject' using Django 4.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from pathlib import Path
import os
import time
from dotenv import load_dotenv
from github import Github
import json
import threading
from portfolioapp.get_github_info import get_repo_informations

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

if not os.path.exists(BASE_DIR / "secrets"):
    os.mkdir(BASE_DIR / "secrets")

if not os.path.exists(BASE_DIR / "secrets/.env"):
    with open(BASE_DIR / ".env","w") as new_env:
        pass

GITHUB_INFO_FILE = BASE_DIR / "secrets/github_info.json"

def create_github_infofile(filepath):
    with open(filepath,"w") as new_file:
        json.dump({"repos":[]},new_file,indent=4)

if not os.path.exists(GITHUB_INFO_FILE):
    create_github_infofile(GITHUB_INFO_FILE)

load_dotenv(BASE_DIR / 'secrets/.env')

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-z%!_&&fyu9gf+=_z(fj0zkj=5yd4a+8n0md)=my^mi#fqj(j9y'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [
    '192.168.192.25',
    '192.168.225.25',
    '*',
    '192.168.19.25'
]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'portfolioapp',
    'django_browser_reload'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    "django_browser_reload.middleware.BrowserReloadMiddleware",
]

ROOT_URLCONF = 'mysite.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            BASE_DIR / "general_templates"
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'mysite.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = 'static/'

STATICFILES_DIRS = [
    BASE_DIR / "static"
]

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# Email Configurations

CUSTOM_EMAIL_SERVICE_SENDER_EMAIL = os.environ.get("GMAIL_ACCOUNT_EMAIL")
CUSTOM_EMAIL_SERVICE_SENDER_EMAIL_PASSWORD = os.environ.get("GMAIL_ACCOUNT_APP_PASSWORD")
MESSAGE_EMAIL = os.environ.get("MESSAGE_EMAIL")

GITHUB_TOKEN = os.environ.get("GITHUB_TOKEN")

github = Github(login_or_token=GITHUB_TOKEN)

def update_github_information():
    print("running")
    while True:   
        get_repo_informations() 
        time.sleep(3600)

threading.Thread(target=update_github_information,daemon=True).start()